name: "Nuclei - DAST Scan"
description: "Nuclei is a fast and customisable vulnerability scanner based on simple YAML based DSL"
branding:
  icon: "activity"
  color: "blue"

inputs:
  target:
    description: "Target to run nuclei scan"
    required: true

  urls:
    description: "List of urls to run templates"
    required: false

  templates:
    description: "Templates input file/files to check across hosts"
    required: false

  output:
    description: "File to save output result"
    required: false

  json:
    description: "Write nuclei output in JSON format"
    required: false
    default: false

  include-rr:
    description: "Write requests/responses for matches in JSON output"
    required: false
    default: false

  user-agent:
    description: "Set a Custom User-Agent header"
    required: false

  config:
    description: "Nuclei configuration file"
    required: false

  report-config:
    description: "Issue reporting configuration file"
    required: false

  github-report:
    description: "Nuclei Reporting Module for Github Issues"
    required: false
    default: false

  github-token:
    description: "Github token for Github reporting"
    required: false

  sarif-export:
    description: "Export nuclei results in SARIF format"
    required: false

  markdown-export:
    description: "Export nuclei results in Markdown format"
    required: false

  flags:
    description: "Extra nuclei CLI flags to use"
    required: false

runs:
  using: "composite"
  steps:
    - run: |
        echo "::group::Install Nuclei with go get"
        [ ! -x /home/runner/go/bin/nuclei ] && GO111MODULE=on go get -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@v2.5.2
        echo "/home/runner/go/bin/" >> $GITHUB_PATH
        echo "::endgroup::"
      shell: bash

    - run: |
        [ ! -z ${{ inputs.target }} ] && echo "target=-target ${{ inputs.target}}" >> $GITHUB_ENV
        [ ! -z ${{ inputs.urls }} ] && echo "urls=-list ${{ inputs.urls}}" >> $GITHUB_ENV
        [ ! -z ${{ inputs.templates }} ] && echo "templates=-t ${{ inputs.templates }}" >> $GITHUB_ENV
        [ ! -z ${{ inputs.output }} ] && echo "output=-o ${{ inputs.output}}" >> $GITHUB_ENV || echo "output=-o nuclei.log" >> $GITHUB_ENV
        [ ! -z ${{ inputs.sarif-export }} ] && echo "sarif-export=-se ${{ inputs.sarif-export}}" >> $GITHUB_ENV || echo "sarif-export=-se nuclei.sarif" >> $GITHUB_ENV
        [ ! -z ${{ inputs.markdown-export }} ] && echo "markdown-export=-me ${{ inputs.markdown-export}}" >> $GITHUB_ENV
        [ ! -z ${{ inputs.report-config }} ] && echo "reportconfig=-rc ${{ inputs.report-config}}" >> $GITHUB_ENV
        [ ! -z ${{ inputs.config }} ] && echo "config=-config ${{ inputs.config}}" >> $GITHUB_ENV
        [ ! -z "${{ inputs.user-agent }}" ] && echo "useragent=-H ${{ inputs.user-agent }}" >> $GITHUB_ENV
        [ ! -z "${{ inputs.flags }}" ] && echo "flags=${{ inputs.flags }}" >> $GITHUB_ENV
        ${{ inputs.json }} && echo "json=-json" >> $GITHUB_ENV
        ${{ inputs.include-rr }} && echo "includerr=-irr" >> $GITHUB_ENV
        ${{ inputs.github-report }} \
        && touch ~/nuclei-github-config.yaml \
        && echo -e "github:" >> ~/nuclei-github-config.yaml \
        && echo -e "  username: \"$GITHUB_ACTOR\"" >> ~/nuclei-github-config.yaml \
        && echo -e "  owner: \"${GITHUB_REPOSITORY%%/*}\"" >> ~/nuclei-github-config.yaml \
        && echo -e "  token: \"${{ inputs.github-token }}\"" >> ~/nuclei-github-config.yaml \
        && echo -e "  project-name: \"${GITHUB_REPOSITORY#*/}\"" >> ~/nuclei-github-config.yaml \
        && echo -e "  issue-label: \"Nuclei\"" >> ~/nuclei-github-config.yaml \
        && echo "githubconfig=-rc ~/nuclei-github-config.yaml" >> $GITHUB_ENV
        
        nuclei -silent
      shell: bash
    - run: |

        nuclei \
          ${{ env.target }} \
          ${{ env.urls }} \
          ${{ env.templates }} \
          ${{ env.output }} \
          ${{ env.sarif-export }} \
          ${{ env.markdown-export }} \
          ${{ env.json }} \
          ${{ env.flags }} \
          ${{ env.config }} \
          ${{ env.reportconfig }} \
          ${{ env.githubconfig }} \
          ${{ env.useragent }} \
          ${{ env.includerr }}
      shell: bash
